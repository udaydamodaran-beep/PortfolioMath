import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# --- Data ---
years = [2019, 2020, 2021, 2022, 2023, 2024]
returns_A = np.array([0.06, 0.08, 0.05, 0.10, 0.25, 0.07])
returns_B = np.array([0.02, 0.25, 0.08, 0.40, 0.08, 0.00])

data = pd.DataFrame({"Year": years, "Stock A": returns_A, "Stock B": returns_B})

# --- Instructions ---
st.title("ðŸ“ˆ Portfolio Math Demonstration")
st.markdown("""
**Given to you are the returns generated by two stocks A and B over the last 6 years (2019â€“2024).**
""")
st.dataframe(data.style.format({"Stock A": "{:.0%}", "Stock B": "{:.0%}"}), use_container_width=True)

# --- Prompt to User ---
st.subheader("ðŸ’¡ Portfolio Choice")
st.markdown("""
Assuming the stocksâ€™ behavior in the next year to be driven by the past returnâ€“risk behavior,  
how much of your money will you put in **A**?  

Your answer should be in decimals. For example, if you plan to divide your money equally between the two stocks,  
your response to A should be **0.5** (and to B will be **0.5** automatically).  

*Note: the weights will add up to 1.*
""")

weight_A = st.number_input("Proportion in Stock A:", min_value=0.0, max_value=1.0, value=0.5, step=0.05)
weight_B = 1 - weight_A

weights = np.array([weight_A, weight_B])

# --- Portfolio Math ---
mean_returns = data[["Stock A", "Stock B"]].mean()
cov_matrix = data[["Stock A", "Stock B"]].cov()

port_return = np.dot(weights, mean_returns)
port_var = np.dot(weights.T, np.dot(cov_matrix, weights))
port_std = np.sqrt(port_var)

st.subheader("ðŸ“ˆ Your Portfolio Results")
st.write(f"**Expected Return:** {port_return:.2%}")
st.write(f"**Portfolio Risk (Std. Dev.):** {port_std:.2%}")

# --- Frontier Plot ---
st.subheader("Efficient Frontier (Two-Asset Case)")
num_points = 100
w_A = np.linspace(0, 1, num_points)
returns = []
risks = []

for w in w_A:
    w_vec = np.array([w, 1 - w])
    r = np.dot(w_vec, mean_returns)
    v = np.dot(w_vec.T, np.dot(cov_matrix, w_vec))
    returns.append(r)
    risks.append(np.sqrt(v))

fig, ax = plt.subplots()
ax.plot(risks, returns, 'b-', label="Feasible Frontier")
ax.scatter(port_std, port_return, color='red', s=80, label="Your Portfolio")
ax.set_xlabel("Risk (Std. Dev.)")
ax.set_ylabel("Expected Return")
ax.legend()
st.pyplot(fig)

# --- Footer (centered & subtle) ---
st.markdown(
    "<div style='text-align: center; font-size:12px; color:gray; margin-top:40px;'>"
    "Developed by Uday Damodaran for pedagogical purposes"
    "</div>",
    unsafe_allow_html=True
)
